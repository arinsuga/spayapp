@model APPBASE.Models.Transaction_indetailVM
@using APPBASE.Helpers
@using APPBASE.Models

@{string vsErrClass = "";}
@{string vsDisableButton = "";}
@{Boolean isShowDropdown = true;}
@{string vsReadonlyTextboxKey = "Readonly";}
@{string vsReadonlyTextbox = "";}
@if (ViewBag.CRUD_type == hlpFlags_CRUDOption.CREATE) { vsReadonlyTextboxKey = ""; }
@if ((ViewBag.CRUD_type == hlpFlags_CRUDOption.VIEW) || (ViewBag.CRUD_type == hlpFlags_CRUDOption.DELETE)) { vsDisableButton = "disabled"; vsReadonlyTextbox = "Readonly"; isShowDropdown = false; }
@{string vsDateFormat = "'alias': 'dd/mm/yyyy'";}

<div class="row">
    <div class="col-xs-8">
        @if (ViewData.ModelState["TRND_AMOUNT0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="TRND_AMOUNT">Sisa Pembayaran ( @hlpConvertionAndFormating.ConvertDecimalToStringFmtThousand(Model.INST.INST_AMOUNT_OUTSTANDING) )</label>
            <input type="text" id="TRND_AMOUNT_S" name="TRND_AMOUNT_S" value="@Html.DisplayFor(model => model.TRND_AMOUNT)" class="form-control data-mask-decimal" style="text-align:right;"  @vsReadonlyTextbox />
            <input type="hidden" id="TRND_AMOUNT" name="TRND_AMOUNT" value="@Html.DisplayFor(model => model.TRND_AMOUNT)" class="form-control data-mask-decimal" style="text-align:right;"  @vsReadonlyTextbox />
            <input type="hidden" id="hidden_TRND_AMOUNT" name="hidden_TRND_AMOUNT" value="@Html.DisplayFor(model => model.TRND_AMOUNT)" />

            @if (ViewData.ModelState["TRND_AMOUNT1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("TRND_AMOUNT1")
                    </label>
            }
            @if (ViewData.ModelState["TRND_AMOUNT2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("TRND_AMOUNT2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["TRND_DESC0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="TRND_DESC">Catatan</label>
            <input type="text" id="TRND_DESC" name="TRND_DESC" value="@Html.DisplayFor(model => model.TRND_DESC)" class="form-control" maxlength = "50" @vsReadonlyTextbox />

            @if (ViewData.ModelState["TRND_DESC1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("TRND_DESC1")
                    </label>
            }
            @if (ViewData.ModelState["TRND_DESC2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("TRND_DESC2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->


