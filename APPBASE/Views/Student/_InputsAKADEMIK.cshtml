@model APPBASE.Models.StudentVM
@using APPBASE.Helpers

@{string vsErrClass = "";}
@{string vsDisableButton = "";}
@{Boolean isShowDropdown = true;}
@{string vsReadonlyTextboxKey = "Readonly";}
@{string vsReadonlyTextbox = "";}
@if (ViewBag.CRUD_type == hlpFlags_CRUDOption.CREATE) { vsReadonlyTextboxKey = ""; }
@if ((ViewBag.CRUD_type == hlpFlags_CRUDOption.VIEW) || (ViewBag.CRUD_type == hlpFlags_CRUDOption.DELETE)) { vsDisableButton = "disabled"; vsReadonlyTextbox = "Readonly"; isShowDropdown = false; }
@{string vsDateFormat = "'alias': 'dd/mm/yyyy'";}

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["REG_DT0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="REG_DT">Tanggal Pendaftaran</label>
            <input type="text" id="REG_DT" name="DETAIL.REG_DT" value="@Html.DisplayFor(model => model.DETAIL.REG_DT)" class="form-control" @vsReadonlyTextbox data-inputmask="@vsDateFormat" data-mask />

            
            @if (ViewData.ModelState["REG_DT1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("REG_DT1")
                    </label>
            }
            @if (ViewData.ModelState["REG_DT2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("REG_DT2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["PREV_SCHOOL_NAME0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="PREV_SCHOOL_NAME">Nama Sekolah Asal</label>
            <input type="text" id="PREV_SCHOOL_NAME" name="DETAIL.PREV_SCHOOL_NAME" value="@Html.DisplayFor(model => model.DETAIL.PREV_SCHOOL_NAME)" class="form-control" maxlength = "30" @vsReadonlyTextbox />

            @if (ViewData.ModelState["PREV_SCHOOL_NAME1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("PREV_SCHOOL_NAME1")
                    </label>
            }
            @if (ViewData.ModelState["PREV_SCHOOL_NAME2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("PREV_SCHOOL_NAME2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["PREV_SCHOOL_ADDR0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="PREV_SCHOOL_ADDR">Alamat Sekolah Asal</label>
            <input type="text" id="PREV_SCHOOL_ADDR" name="DETAIL.PREV_SCHOOL_ADDR" value="@Html.DisplayFor(model => model.DETAIL.PREV_SCHOOL_ADDR)" class="form-control" maxlength = "30" @vsReadonlyTextbox />

            @if (ViewData.ModelState["PREV_SCHOOL_ADDR1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("PREV_SCHOOL_ADDR1")
                    </label>
            }
            @if (ViewData.ModelState["PREV_SCHOOL_ADDR2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("PREV_SCHOOL_ADDR2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<hr />

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["STUDENTSTS_ID0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="STUDENTSTS_ID">Status Siswa</label>
                <select id="STUDENTSTS_ID" name="DETAIL.STUDENTSTS_ID" class="form-control select2" data-placeholder="Select Status Siswa" style="width: 100%;" @vsReadonlyTextbox>
                    <option selected value=""></option>
                    @foreach (var item in ViewBag.STUDENTSTS)
                    {

                        if (Model.DETAIL.STUDENTSTS_ID == item.ID) {<option selected value="@item.ID">@item.LOV_DESC</option> }
                        else {<option value="@item.ID">@item.LOV_DESC</option> }
                    }
                </select>

            @if (ViewData.ModelState["STUDENTSTS_ID1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("STUDENTSTS_ID1")
                    </label>
            }
            @if (ViewData.ModelState["STUDENTSTS_ID2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("STUDENTSTS_ID2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["NEXT_SCHOOL_NAME0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="NEXT_SCHOOL_NAME">Sekolah Tujuan</label>
            <input type="text" id="NEXT_SCHOOL_NAME" name="DETAIL.NEXT_SCHOOL_NAME" value="@Html.DisplayFor(model => model.DETAIL.NEXT_SCHOOL_NAME)" class="form-control" maxlength = "30" @vsReadonlyTextbox />

            @if (ViewData.ModelState["NEXT_SCHOOL_NAME1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("NEXT_SCHOOL_NAME1")
                    </label>
            }
            @if (ViewData.ModelState["NEXT_SCHOOL_NAME2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("NEXT_SCHOOL_NAME2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["NEXT_SCHOOL_DT0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="NEXT_SCHOOL_DT">Tanggal Pindah</label>
            <input type="text" id="NEXT_SCHOOL_DT" name="DETAIL.NEXT_SCHOOL_DT" value="@Html.DisplayFor(model => model.DETAIL.NEXT_SCHOOL_DT)" class="form-control" @vsReadonlyTextbox data-inputmask="@vsDateFormat" data-mask />

            
            @if (ViewData.ModelState["NEXT_SCHOOL_DT1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("NEXT_SCHOOL_DT1")
                    </label>
            }
            @if (ViewData.ModelState["NEXT_SCHOOL_DT2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("NEXT_SCHOOL_DT2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

