@model APPBASE.Models.YeardetailVM
@using APPBASE.Helpers

@{string vsErrClass = "";}
@{string vsDisableButton = "";}
@{Boolean isShowDropdown = true;}
@{string vsReadonlyTextboxKey = "Readonly";}
@{string vsReadonlyTextbox = "";}
@if (ViewBag.CRUD_type == hlpFlags_CRUDOption.CREATE) { vsReadonlyTextboxKey = ""; }
@if ((ViewBag.CRUD_type == hlpFlags_CRUDOption.VIEW) || (ViewBag.CRUD_type == hlpFlags_CRUDOption.DELETE)) { vsDisableButton = "disabled"; vsReadonlyTextbox = "Readonly"; isShowDropdown = false; }
@{string vsDateFormat = "'alias': 'dd/mm/yyyy'";}


<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["YEAR_DESC0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="YEAR_DESC">Tahun Ajaran</label>
            <input type="text" id="YEAR_DESC" name="YEAR_DESC" value="@Html.DisplayFor(model => model.YEAR_DESC)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["YEAR_DESC1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("YEAR_DESC1")
                    </label>
            }
            @if (ViewData.ModelState["YEAR_DESC2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("YEAR_DESC2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["YEAR_FROM0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="YEAR_FROM">Tanggal Mulai</label>
            <input type="text" id="YEAR_FROM" name="YEAR_FROM" value="@Html.DisplayFor(model => model.YEAR_FROM)" class="form-control" @vsReadonlyTextbox data-inputmask="@vsDateFormat" data-mask />

            
            @if (ViewData.ModelState["YEAR_FROM1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("YEAR_FROM1")
                    </label>
            }
            @if (ViewData.ModelState["YEAR_FROM2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("YEAR_FROM2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["YEAR_TO0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="YEAR_TO">Tanggal Berakhir</label>
            <input type="text" id="YEAR_TO" name="YEAR_TO" value="@Html.DisplayFor(model => model.YEAR_TO)" class="form-control" @vsReadonlyTextbox data-inputmask="@vsDateFormat" data-mask />

            
            @if (ViewData.ModelState["YEAR_TO1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("YEAR_TO1")
                    </label>
            }
            @if (ViewData.ModelState["YEAR_TO2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("YEAR_TO2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

