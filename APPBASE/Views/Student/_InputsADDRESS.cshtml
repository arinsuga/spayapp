@model APPBASE.Models.StudentVM
@using APPBASE.Helpers

@{string vsErrClass = "";}
@{string vsDisableButton = "";}
@{Boolean isShowDropdown = true;}
@{string vsReadonlyTextboxKey = "Readonly";}
@{string vsReadonlyTextbox = "";}
@if (ViewBag.CRUD_type == hlpFlags_CRUDOption.CREATE) { vsReadonlyTextboxKey = ""; }
@if ((ViewBag.CRUD_type == hlpFlags_CRUDOption.VIEW) || (ViewBag.CRUD_type == hlpFlags_CRUDOption.DELETE)) { vsDisableButton = "disabled"; vsReadonlyTextbox = "Readonly"; isShowDropdown = false; }
@{string vsDateFormat = "'alias': 'dd/mm/yyyy'";}

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["ADDR_STREET10"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        @if (ViewData.ModelState["ADDR_STREET20"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="ADDR_STREET1"></label>
            <div>
                <input type="text" id="ADDR_STREET1" name="DETAIL.ADDR_STREET1" value="@Html.DisplayFor(model => model.DETAIL.ADDR_STREET1)" class="form-control" maxlength = "90" @vsReadonlyTextbox />
                @if (ViewData.ModelState["ADDR_STREET11"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_STREET11")
                        </label>
                }
                @if (ViewData.ModelState["ADDR_STREET12"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_STREET12")
                        </label>
                }
            </div> <!-- ADDR_STREET1 -->
            <div>
                <input type="text" id="ADDR_STREET2" name="DETAIL.ADDR_STREET2" value="@Html.DisplayFor(model => model.DETAIL.ADDR_STREET2)" class="form-control" maxlength = "90" @vsReadonlyTextbox />
                @if (ViewData.ModelState["ADDR_STREET21"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_STREET21")
                        </label>
                }
                @if (ViewData.ModelState["ADDR_STREET22"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_STREET22")
                        </label>
                }
            </div> <!-- ADDR_STREET2 -->
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-sm-12 col-md-6">
        @if (ViewData.ModelState["ADDR_CITY0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="ADDR_CITY">Kota/Kabupaten</label>
            <select id="ADDR_CITY" name="DETAIL.ADDR_CITY" class="form-control select2" data-placeholder="Select Kabupaten/Kota" style="width: 100%;" @vsReadonlyTextbox>
                <option selected value=""></option>
                @if (ViewBag.CITY != null)
                {
                    foreach (var item in ViewBag.CITY)
                    {

                        if (Model.DETAIL.ADDR_CITY == item.LOV_DESC)
                        {<option selected value="@item.LOV_DESC">@item.LOV_DESC</option> }
                        else
                        {<option value="@item.LOV_DESC">@item.LOV_DESC</option> }
                    }
                }
            </select>
            @if (ViewData.ModelState["ADDR_CITY1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_CITY1")
                    </label>
            }
            @if (ViewData.ModelState["ADDR_CITY2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_CITY2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-sm-12 col-md-6 -->
    
    <div class="col-sm-12 col-md-6">
        @if (ViewData.ModelState["ADDR_ZIP0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="ADDR_ZIP">Kode Pos</label>
            <input type="text" id="ADDR_ZIP" name="DETAIL.ADDR_ZIP" value="@Html.DisplayFor(model => model.DETAIL.ADDR_ZIP)" class="form-control data-mask-integer" maxlength = "5" @vsReadonlyTextbox />

            @if (ViewData.ModelState["ADDR_ZIP1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_ZIP1")
                    </label>
            }
            @if (ViewData.ModelState["ADDR_ZIP2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_ZIP2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-sm-12 col-md-6 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["HOME_PHONE0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="HOME_PHONE">Telepon Rumah</label>
            <input type="text" id="HOME_PHONE" name="DETAIL.HOME_PHONE" value="@Html.DisplayFor(model => model.DETAIL.HOME_PHONE)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["HOME_PHONE1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("HOME_PHONE1")
                    </label>
            }
            @if (ViewData.ModelState["HOME_PHONE2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("HOME_PHONE2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["CELL_PHONE0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="CELL_PHONE">Nomor HP</label>
            <input type="text" id="CELL_PHONE" name="DETAIL.CELL_PHONE" value="@Html.DisplayFor(model => model.DETAIL.CELL_PHONE)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["CELL_PHONE1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("CELL_PHONE1")
                    </label>
            }
            @if (ViewData.ModelState["CELL_PHONE2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("CELL_PHONE2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->



