@model APPBASE.Models.EmployeedetailVM
@using APPBASE.Helpers

@{string vsErrClass = "";}
@{string vsDisableButton = "";}
@{Boolean isShowDropdown = true;}
@{string vsReadonlyTextboxKey = "Readonly";}
@{string vsReadonlyTextbox = "";}
@if (ViewBag.CRUD_type == hlpFlags_CRUDOption.CREATE) { vsReadonlyTextboxKey = ""; }
@if ((ViewBag.CRUD_type == hlpFlags_CRUDOption.VIEW) || (ViewBag.CRUD_type == hlpFlags_CRUDOption.DELETE)) { vsDisableButton = "disabled"; vsReadonlyTextbox = "Readonly"; isShowDropdown = false; }
@{string vsDateFormat = "'alias': 'dd/mm/yyyy'";}

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["SEX_ID0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="SEX_ID">J.Kelamin</label>
                <select id="SEX_ID" name="SEX_ID" class="form-control select2" data-placeholder="Select J.Kelamin" style="width: 100%;" @vsReadonlyTextbox>
                    <option selected value=""></option>
                    @foreach (var item in ViewBag.GENDER)
                    {

                        if (Model.SEX_ID == item.ID) {<option selected value="@item.ID">@item.LOV_DESC</option> }
                        else {<option value="@item.ID">@item.LOV_DESC</option> }
                    }
                </select>

            @if (ViewData.ModelState["SEX_ID1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("SEX_ID1")
                    </label>
            }
            @if (ViewData.ModelState["SEX_ID2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("SEX_ID2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["POB0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="POB">Tempat Lahir</label>
            <input type="text" id="POB" name="POB" value="@Html.DisplayFor(model => model.POB)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["POB1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("POB1")
                    </label>
            }
            @if (ViewData.ModelState["POB2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("POB2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["DOB0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="DOB">Tanggal Lahir</label>
            <input type="text" id="DOB" name="DOB" value="@Html.DisplayFor(model => model.DOB)" class="form-control" @vsReadonlyTextbox data-inputmask="@vsDateFormat" data-mask />

            
            @if (ViewData.ModelState["DOB1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("DOB1")
                    </label>
            }
            @if (ViewData.ModelState["DOB2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("DOB2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["MARITAL_ID0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="MARITAL_ID">Status Perkawinan</label>
                <select id="MARITAL_ID" name="MARITAL_ID" class="form-control select2" data-placeholder="Select Status Perkawinan" style="width: 100%;" @vsReadonlyTextbox>
                    <option selected value=""></option>
                    @foreach (var item in ViewBag.MARITAL)
                    {

                        if (Model.MARITAL_ID == item.ID) {<option selected value="@item.ID">@item.LOV_DESC</option> }
                        else {<option value="@item.ID">@item.LOV_DESC</option> }
                    }
                </select>

            @if (ViewData.ModelState["MARITAL_ID1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("MARITAL_ID1")
                    </label>
            }
            @if (ViewData.ModelState["MARITAL_ID2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("MARITAL_ID2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["RELIGION_ID0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="RELIGION_ID">Agama</label>
                <select id="RELIGION_ID" name="RELIGION_ID" class="form-control select2" data-placeholder="Select Agama" style="width: 100%;" @vsReadonlyTextbox>
                    <option selected value=""></option>
                    @foreach (var item in ViewBag.RELIGION)
                    {

                        if (Model.RELIGION_ID == item.ID) {<option selected value="@item.ID">@item.LOV_DESC</option> }
                        else {<option value="@item.ID">@item.LOV_DESC</option> }
                    }
                </select>

            @if (ViewData.ModelState["RELIGION_ID1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("RELIGION_ID1")
                    </label>
            }
            @if (ViewData.ModelState["RELIGION_ID2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("RELIGION_ID2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["ETHNIC0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="ETHNIC">Suku</label>
            <input type="text" id="ETHNIC" name="ETHNIC" value="@Html.DisplayFor(model => model.ETHNIC)" class="form-control" maxlength = "15" @vsReadonlyTextbox />

            @if (ViewData.ModelState["ETHNIC1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ETHNIC1")
                    </label>
            }
            @if (ViewData.ModelState["ETHNIC2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ETHNIC2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
