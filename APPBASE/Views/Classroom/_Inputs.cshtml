@model APPBASE.Models.ClassroomdetailVM
@using APPBASE.Helpers

@{string vsErrClass = "";}
@{string vsDisableButton = "";}
@{Boolean isShowDropdown = true;}
@{string vsReadonlyTextboxKey = "Readonly";}
@{string vsReadonlyTextbox = "";}
@if (ViewBag.CRUD_type == hlpFlags_CRUDOption.CREATE) { vsReadonlyTextboxKey = ""; }
@if ((ViewBag.CRUD_type == hlpFlags_CRUDOption.VIEW) || (ViewBag.CRUD_type == hlpFlags_CRUDOption.DELETE)) { vsDisableButton = "disabled"; vsReadonlyTextbox = "Readonly"; isShowDropdown = false; }
@{string vsDateFormat = "'alias': 'dd/mm/yyyy'";}

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["CLASSROOM_CODE0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="CLASSROOM_CODE">Kode Kelas</label>
            <input type="text" id="CLASSROOM_CODE" name="CLASSROOM_CODE" value="@Html.DisplayFor(model => model.CLASSROOM_CODE)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["CLASSROOM_CODE1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("CLASSROOM_CODE1")
                    </label>
            }
            @if (ViewData.ModelState["CLASSROOM_CODE2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("CLASSROOM_CODE2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["CLASSROOM_SHORTDESC0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="CLASSROOM_SHORTDESC">Deskripsi singkat (short)</label>
            <input type="text" id="CLASSROOM_SHORTDESC" name="CLASSROOM_SHORTDESC" value="@Html.DisplayFor(model => model.CLASSROOM_SHORTDESC)" class="form-control" maxlength = "100" @vsReadonlyTextbox />

            @if (ViewData.ModelState["CLASSROOM_SHORTDESC1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("CLASSROOM_SHORTDESC1")
                    </label>
            }
            @if (ViewData.ModelState["CLASSROOM_SHORTDESC2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("CLASSROOM_SHORTDESC2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["CLASSROOM_DESC0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="CLASSROOM_DESC">Nama Kelas (Long)</label>
            <input type="text" id="CLASSROOM_DESC" name="CLASSROOM_DESC" value="@Html.DisplayFor(model => model.CLASSROOM_DESC)" class="form-control" maxlength = "100" @vsReadonlyTextbox />

            @if (ViewData.ModelState["CLASSROOM_DESC1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("CLASSROOM_DESC1")
                    </label>
            }
            @if (ViewData.ModelState["CLASSROOM_DESC2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("CLASSROOM_DESC2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
