@model APPBASE.Models.EmployeedetailVM
@using APPBASE.Helpers

@{string vsErrClass = "";}
@{string vsDisableButton = "";}
@{Boolean isShowDropdown = true;}
@{string vsReadonlyTextboxKey = "Readonly";}
@{string vsReadonlyTextbox = "";}
@if (ViewBag.CRUD_type == hlpFlags_CRUDOption.CREATE) { vsReadonlyTextboxKey = ""; }
@if ((ViewBag.CRUD_type == hlpFlags_CRUDOption.VIEW) || (ViewBag.CRUD_type == hlpFlags_CRUDOption.DELETE)) { vsDisableButton = "disabled"; vsReadonlyTextbox = "Readonly"; isShowDropdown = false; }
@{string vsDateFormat = "'alias': 'dd/mm/yyyy'";}

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["NIP0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="NIP">NIP</label>
            <input type="text" id="NIP" name="NIP" value="@Html.DisplayFor(model => model.NIP)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["NIP1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("NIP1")
                    </label>
            }
            @if (ViewData.ModelState["NIP2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("NIP2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["KTP0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="KTP">Nomor KTP</label>
            <input type="text" id="KTP" name="KTP" value="@Html.DisplayFor(model => model.KTP)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["KTP1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("KTP1")
                    </label>
            }
            @if (ViewData.ModelState["KTP2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("KTP2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["NAME0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="NAME">Nama</label>
            <input type="text" id="NAME" name="NAME" value="@Html.DisplayFor(model => model.NAME)" class="form-control" maxlength = "60" @vsReadonlyTextbox />

            @if (ViewData.ModelState["NAME1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("NAME1")
                    </label>
            }
            @if (ViewData.ModelState["NAME2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("NAME2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["SEX_ID0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="SEX_ID">J.Kelamin</label>
                <select id="SEX_ID" name="SEX_ID" class="form-control select2" data-placeholder="Select J.Kelamin" style="width: 100%;" @vsReadonlyTextbox>
                    <option selected value=""></option>
                    @foreach (var item in ViewBag.GENDER)
                    {

                        if (Model.SEX_ID == item.ID) {<option selected value="@item.ID">@item.LOV_DESC</option> }
                        else {<option value="@item.ID">@item.LOV_DESC</option> }
                    }
                </select>

            @if (ViewData.ModelState["SEX_ID1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("SEX_ID1")
                    </label>
            }
            @if (ViewData.ModelState["SEX_ID2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("SEX_ID2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["POB0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="POB">Tempat Lahir</label>
            <input type="text" id="POB" name="POB" value="@Html.DisplayFor(model => model.POB)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["POB1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("POB1")
                    </label>
            }
            @if (ViewData.ModelState["POB2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("POB2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["DOB0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="DOB">Tanggal Lahir</label>
            <input type="text" id="DOB" name="DOB" value="@Html.DisplayFor(model => model.DOB)" class="form-control" @vsReadonlyTextbox data-inputmask="@vsDateFormat" data-mask />

            
            @if (ViewData.ModelState["DOB1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("DOB1")
                    </label>
            }
            @if (ViewData.ModelState["DOB2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("DOB2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["MARITAL_ID0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="MARITAL_ID">Status Perkawinan</label>
                <select id="MARITAL_ID" name="MARITAL_ID" class="form-control select2" data-placeholder="Select Status Perkawinan" style="width: 100%;" @vsReadonlyTextbox>
                    <option selected value=""></option>
                    @foreach (var item in ViewBag.MARITAL)
                    {

                        if (Model.MARITAL_ID == item.ID) {<option selected value="@item.ID">@item.LOV_DESC</option> }
                        else {<option value="@item.ID">@item.LOV_DESC</option> }
                    }
                </select>

            @if (ViewData.ModelState["MARITAL_ID1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("MARITAL_ID1")
                    </label>
            }
            @if (ViewData.ModelState["MARITAL_ID2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("MARITAL_ID2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["RELIGION_ID0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="RELIGION_ID">Agama</label>
                <select id="RELIGION_ID" name="RELIGION_ID" class="form-control select2" data-placeholder="Select Agama" style="width: 100%;" @vsReadonlyTextbox>
                    <option selected value=""></option>
                    @foreach (var item in ViewBag.RELIGION)
                    {

                        if (Model.RELIGION_ID == item.ID) {<option selected value="@item.ID">@item.LOV_DESC</option> }
                        else {<option value="@item.ID">@item.LOV_DESC</option> }
                    }
                </select>

            @if (ViewData.ModelState["RELIGION_ID1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("RELIGION_ID1")
                    </label>
            }
            @if (ViewData.ModelState["RELIGION_ID2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("RELIGION_ID2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["ETHNIC0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="ETHNIC">Suku</label>
            <input type="text" id="ETHNIC" name="ETHNIC" value="@Html.DisplayFor(model => model.ETHNIC)" class="form-control" maxlength = "15" @vsReadonlyTextbox />

            @if (ViewData.ModelState["ETHNIC1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ETHNIC1")
                    </label>
            }
            @if (ViewData.ModelState["ETHNIC2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ETHNIC2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<hr />

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["ADDR_STREET10"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="ADDR_STREET1">Alamat</label>
            <div>
                <input type="text" id="ADDR_STREET1" name="ADDR_STREET1" value="@Html.DisplayFor(model => model.ADDR_STREET1)" class="form-control" maxlength = "90" @vsReadonlyTextbox />
                @if (ViewData.ModelState["ADDR_STREET11"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_STREET11")
                        </label>
                }
                @if (ViewData.ModelState["ADDR_STREET12"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_STREET12")
                        </label>
                }
            </div> <!-- ADDR_STREET1 -->
            <div>
                <input type="text" id="ADDR_STREET2" name="ADDR_STREET2" value="@Html.DisplayFor(model => model.ADDR_STREET2)" class="form-control" maxlength = "90" @vsReadonlyTextbox />
                @if (ViewData.ModelState["ADDR_STREET21"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_STREET21")
                        </label>
                }
                @if (ViewData.ModelState["ADDR_STREET22"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_STREET22")
                        </label>
                }
            </div> <!-- ADDR_STREET2 -->

        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-sm-12 col-md-6">
        @if (ViewData.ModelState["ADDR_KEL0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="ADDR_KEL">Kelurahan</label>
            <input type="text" id="ADDR_KEL" name="ADDR_KEL" value="@Html.DisplayFor(model => model.ADDR_KEL)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["ADDR_KEL1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_KEL1")
                    </label>
            }
            @if (ViewData.ModelState["ADDR_KEL2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_KEL2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-sm-12 col-md-6 ADDR_KEL -->
    <div class="col-sm-12 col-md-6">
        @if (ViewData.ModelState["ADDR_KEC0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="ADDR_KEC">Kecamatan</label>
            <input type="text" id="ADDR_KEC" name="ADDR_KEC" value="@Html.DisplayFor(model => model.ADDR_KEC)" class="form-control" maxlength = "20" @vsReadonlyTextbox />
            @if (ViewData.ModelState["ADDR_KEC1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_KEC1")
                    </label>
            }
            @if (ViewData.ModelState["ADDR_KEC2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_KEC2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-sm-12 col-md-6 ADDR_KEC -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["ADDR_CITY0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="ADDR_CITY">Kota/Kabupaten</label>
                <select id="ADDR_CITY" name="ADDR_CITY" class="form-control select2" data-placeholder="Select Kota/Kabupaten" style="width: 100%;" @vsReadonlyTextbox>
                    <option selected value=""></option>
                    @foreach (var item in ViewBag.CITY)
                    {

                        if (Model.ADDR_CITY == item.LOV_DESC) {<option selected value="@item.LOV_DESC">@item.LOV_DESC</option> }
                        else {<option value="@item.LOV_DESC">@item.LOV_DESC</option> }
                    }
                </select>

            @if (ViewData.ModelState["ADDR_CITY1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_CITY1")
                    </label>
            }
            @if (ViewData.ModelState["ADDR_CITY2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_CITY2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<hr />

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["HOME_PHONE0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="HOME_PHONE">Telepon Rumah</label>
            <input type="text" id="HOME_PHONE" name="HOME_PHONE" value="@Html.DisplayFor(model => model.HOME_PHONE)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["HOME_PHONE1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("HOME_PHONE1")
                    </label>
            }
            @if (ViewData.ModelState["HOME_PHONE2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("HOME_PHONE2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["CELL_PHONE0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="CELL_PHONE">HP</label>
            <input type="text" id="CELL_PHONE" name="CELL_PHONE" value="@Html.DisplayFor(model => model.CELL_PHONE)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["CELL_PHONE1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("CELL_PHONE1")
                    </label>
            }
            @if (ViewData.ModelState["CELL_PHONE2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("CELL_PHONE2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["EMAIL0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="EMAIL">Email</label>
            <input type="text" id="EMAIL" name="EMAIL" value="@Html.DisplayFor(model => model.EMAIL)" class="form-control" maxlength = "30" @vsReadonlyTextbox />

            @if (ViewData.ModelState["EMAIL1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("EMAIL1")
                    </label>
            }
            @if (ViewData.ModelState["EMAIL2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("EMAIL2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["FACEBOOK0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="FACEBOOK">Facebook</label>
            <input type="text" id="FACEBOOK" name="FACEBOOK" value="@Html.DisplayFor(model => model.FACEBOOK)" class="form-control" maxlength = "30" @vsReadonlyTextbox />

            @if (ViewData.ModelState["FACEBOOK1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("FACEBOOK1")
                    </label>
            }
            @if (ViewData.ModelState["FACEBOOK2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("FACEBOOK2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["TWITTER0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="TWITTER">Twitter</label>
            <input type="text" id="TWITTER" name="TWITTER" value="@Html.DisplayFor(model => model.TWITTER)" class="form-control" maxlength = "30" @vsReadonlyTextbox />

            @if (ViewData.ModelState["TWITTER1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("TWITTER1")
                    </label>
            }
            @if (ViewData.ModelState["TWITTER2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("TWITTER2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["MEDICAL_STORY10"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        @if (ViewData.ModelState["MEDICAL_STORY20"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="MEDICAL_STORY1">Penyakit yang pernah diderita/alergi/penanganan khusus</label>

            <div>
                <input type="text" id="MEDICAL_STORY1" name="MEDICAL_STORY1" value="@Html.DisplayFor(model => model.MEDICAL_STORY1)" class="form-control" maxlength = "50" @vsReadonlyTextbox />
                @if (ViewData.ModelState["MEDICAL_STORY11"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("MEDICAL_STORY11")
                        </label>
                }
                @if (ViewData.ModelState["MEDICAL_STORY12"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("MEDICAL_STORY12")
                        </label>
                }
            </div> <!-- MEDICAL_STORY1 -->

            <div>
                <input type="text" id="MEDICAL_STORY2" name="MEDICAL_STORY2" value="@Html.DisplayFor(model => model.MEDICAL_STORY2)" class="form-control" maxlength = "50" @vsReadonlyTextbox />
                @if (ViewData.ModelState["MEDICAL_STORY21"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("MEDICAL_STORY21")
                        </label>
                }
                @if (ViewData.ModelState["MEDICAL_STORY22"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("MEDICAL_STORY22")
                        </label>
                }
            </div> <!-- MEDICAL_STORY2 -->


        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["EMPLSTS_ID0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="EMPLSTS_ID">Status Kepegawaian</label>
                <select id="EMPLSTS_ID" name="EMPLSTS_ID" class="form-control select2" data-placeholder="Select Status Kepegawaian" style="width: 100%;" @vsReadonlyTextbox>
                    <option selected value=""></option>
                    @foreach (var item in ViewBag.EMPLSTS)
                    {

                        if (Model.EMPLSTS_ID == item.ID) {<option selected value="@item.ID">@item.LOV_DESC</option> }
                        else {<option value="@item.ID">@item.LOV_DESC</option> }
                    }
                </select>

            @if (ViewData.ModelState["EMPLSTS_ID1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("EMPLSTS_ID1")
                    </label>
            }
            @if (ViewData.ModelState["EMPLSTS_ID2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("EMPLSTS_ID2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["JOBTITLE_ID0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="JOBTITLE_ID">Jabatan</label>
                <select id="JOBTITLE_ID" name="JOBTITLE_ID" class="form-control select2" data-placeholder="Select Jabatan" style="width: 100%;" @vsReadonlyTextbox>
                    <option selected value=""></option>
                    @foreach (var item in ViewBag.JOBTITLE)
                    {

                        if (Model.JOBTITLE_ID == item.ID) {<option selected value="@item.ID">@item.LOV_DESC</option> }
                        else {<option value="@item.ID">@item.LOV_DESC</option> }
                    }
                </select>

            @if (ViewData.ModelState["JOBTITLE_ID1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("JOBTITLE_ID1")
                    </label>
            }
            @if (ViewData.ModelState["JOBTITLE_ID2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("JOBTITLE_ID2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
