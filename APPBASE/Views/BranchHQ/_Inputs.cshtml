@model APPBASE.Models.BranchdetailVM
@using APPBASE.Helpers

@{string vsErrClass = "";}
@{string vsDisableButton = "";}
@{Boolean isShowDropdown = true;}
@{string vsReadonlyTextboxKey = "Readonly";}
@{string vsReadonlyTextbox = "";}
@if (ViewBag.CRUD_type == hlpFlags_CRUDOption.CREATE) { vsReadonlyTextboxKey = ""; }
@if ((ViewBag.CRUD_type == hlpFlags_CRUDOption.VIEW) || (ViewBag.CRUD_type == hlpFlags_CRUDOption.DELETE)) { vsDisableButton = "disabled"; vsReadonlyTextbox = "Readonly"; isShowDropdown = false; }
@{string vsDateFormat = "'alias': 'dd/mm/yyyy'";}

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["BRANCH_DESC0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="BRANCH_DESC">Nama Cabang</label>
            <input type="text" id="BRANCH_DESC" name="BRANCH_DESC" value="@Html.DisplayFor(model => model.BRANCH_DESC)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["BRANCH_DESC1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("BRANCH_DESC1")
                    </label>
            }
            @if (ViewData.ModelState["BRANCH_DESC2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("BRANCH_DESC2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["ADDR_CITY0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="ADDR_CITY">Kota</label>
            <input type="text" id="ADDR_CITY" name="ADDR_CITY" value="@Html.DisplayFor(model => model.ADDR_CITY)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["ADDR_CITY1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_CITY1")
                    </label>
            }
            @if (ViewData.ModelState["ADDR_CITY2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_CITY2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["ADDR_KEC0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="ADDR_KEC">Kecamatan</label>
            <input type="text" id="ADDR_KEC" name="ADDR_KEC" value="@Html.DisplayFor(model => model.ADDR_KEC)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["ADDR_KEC1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_KEC1")
                    </label>
            }
            @if (ViewData.ModelState["ADDR_KEC2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_KEC2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["ADDR_KEL0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="ADDR_KEL">Kelurahan</label>
            <input type="text" id="ADDR_KEL" name="ADDR_KEL" value="@Html.DisplayFor(model => model.ADDR_KEL)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["ADDR_KEL1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_KEL1")
                    </label>
            }
            @if (ViewData.ModelState["ADDR_KEL2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_KEL2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["ADDR_ZIP0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="ADDR_ZIP">Kode pos</label>
            <input type="text" id="ADDR_ZIP" name="ADDR_ZIP" value="@Html.DisplayFor(model => model.ADDR_ZIP)" class="form-control data-mask-integer" maxlength = "5" @vsReadonlyTextbox />

            @if (ViewData.ModelState["ADDR_ZIP1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_ZIP1")
                    </label>
            }
            @if (ViewData.ModelState["ADDR_ZIP2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_ZIP2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->
<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["ADDR_STREET10"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        @if (ViewData.ModelState["ADDR_STREET20"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="ADDR_STREET1">Alamat</label>
            
            <div>
                <input type="text" id="ADDR_STREET1" name="ADDR_STREET1" value="@Html.DisplayFor(model => model.ADDR_STREET1)" class="form-control" maxlength = "30" @vsReadonlyTextbox />
                @if (ViewData.ModelState["ADDR_STREET11"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_STREET11")
                        </label>
                }
                @if (ViewData.ModelState["ADDR_STREET12"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_STREET12")
                        </label>
                }
            </div> <!-- ADDR_STREET1 -->
            
            <div>
                <input type="text" id="ADDR_STREET2" name="ADDR_STREET2" value="@Html.DisplayFor(model => model.ADDR_STREET2)" class="form-control" maxlength = "30" @vsReadonlyTextbox />
                @if (ViewData.ModelState["ADDR_STREET21"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_STREET21")
                        </label>
                }
                @if (ViewData.ModelState["ADDR_STREET22"] != null)
                {
                        <label class="control-label" for="inputError">
                        <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("ADDR_STREET22")
                        </label>
                }
            </div> <!-- ADDR_STREET2 -->
            
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["PHONE0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="PHONE">Telepon</label>
            <input type="text" id="PHONE" name="PHONE" value="@Html.DisplayFor(model => model.PHONE)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["PHONE1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("PHONE1")
                    </label>
            }
            @if (ViewData.ModelState["PHONE2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("PHONE2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["FAX0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="FAX">Fax</label>
            <input type="text" id="FAX" name="FAX" value="@Html.DisplayFor(model => model.FAX)" class="form-control" maxlength = "20" @vsReadonlyTextbox />

            @if (ViewData.ModelState["FAX1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("FAX1")
                    </label>
            }
            @if (ViewData.ModelState["FAX2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("FAX2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

<div class="row">
    <div class="col-xs-12">
        @if (ViewData.ModelState["EMAIL0"] != null) { vsErrClass = "has-error"; } else { vsErrClass = ""; }
        <div class="form-group @vsErrClass">
            <label for="EMAIL">Email</label>
            <input type="text" id="EMAIL" name="EMAIL" value="@Html.DisplayFor(model => model.EMAIL)" class="form-control" maxlength = "30" @vsReadonlyTextbox />

            @if (ViewData.ModelState["EMAIL1"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("EMAIL1")
                    </label>
            }
            @if (ViewData.ModelState["EMAIL2"] != null)
            {
                    <label class="control-label" for="inputError">
                    <i class="fa fa-times-circle-o"></i> @Html.ValidationMessage("EMAIL2")
                    </label>
            }
        </div> <!-- /.form-group -->
    </div> <!-- /.col-xs-12 -->
</div><!-- /.row -->

